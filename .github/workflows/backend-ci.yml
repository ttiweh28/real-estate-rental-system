# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  workflow_dispatch:
  # push:
    # branches: [ "main" ]
  # pull_request:
    # branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run:  cd ./backend/real_estate_rental_system/ && mvn clean package

      - name: Verify JAR exists
        run: ls -lh  ./backend/real_estate_rental_system/target/*.jar

      - name: Read Current Version
        id: versioning
        run: |
          VERSION=$(cat VERSION)
          NEW_VERSION=$(echo "$VERSION" | awk -F. '{$NF+=1} 1' OFS=".")
          echo "New version: $NEW_VERSION"
          echo $NEW_VERSION > VERSION
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Git Commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and Push Docker Image to Docker Hub
        run: |
          cd ./backend/real_estate_rental_system/
          
          docker build -t ${{ secrets.DOCKER_USERNAME }}/real-estate-rental-system:${{ env.NEW_VERSION }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/real-estate-rental-system:${{ env.NEW_VERSION }}

      - name: Tag the New Version
        run: |
          echo "${{ env.NEW_VERSION }}" > VERSION
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add VERSION
          git pull origin main
          git commit -m "Bump version to ${{ env.NEW_VERSION }}"
          git push origin main
          git tag -a v${{ env.NEW_VERSION }} -m "Release version ${{ env.NEW_VERSION }}"
          git push origin v${{ env.NEW_VERSION }}
